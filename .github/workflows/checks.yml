# Simple workflow for deploying static content to GitHub Pages
name: Commit checks

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["release_prep"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
#concurrency:
#  group: "pages"
#  cancel-in-progress: false

jobs:
  commit_check:
    name: Check commit for errors
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add Version File
        run: |
          CSPROJ="src/MauiDesigner/MauiDesigner/MauiDesigner.csproj"
          REQUIRED="<RuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('OSX'))">maccatalyst-arm64</RuntimeIdentifier>"
          if grep -q "<!--.*${REQUIRED}.*-->" "$CSPROJ"; then
            echo "ERROR: RuntimeIdentifier needs to be commented out."
            exit 1
          else
            echo "OK: RuntimeIdentifier not commented out."
          fi
          if ! grep -q "${REQUIRED}" "$CSPROJ"; then
            echo "ERROR: Expected RuntimeIdentifier for arm64."
            exit 1
          else
            echo "OK: RuntimeIdentifer code present."
          fi
